{
    "$schema": "",
    "title": "Diff Universe DSL v0.1",
    "description": "Schema for defining expected state changes in isolated environments",
    "type": "object",
    "properties": {
        "version": {
            "type": "string",
            "enum": [
                "0.1"
            ],
            "description": "DSL version"
        },
        "scenario": {
            "type": "string",
            "description": "Human-readable test scenario name"
        },
        "task": {
            "type": "string",
            "description": "What the agent was asked to do"
        },
        "ignore_fields": {
            "type": "object",
            "description": "Fields to ignore when computing diffs",
            "properties": {
                "global": {
                    "type": "array",
                    "description": "Fields to ignore across all entities",
                    "items": {
                        "type": "string",
                        "minLength": 1
                    },
                    "uniqueItems": true
                }
            },
            "patternProperties": {
                "^[a-zA-Z_][a-zA-Z0-9_]*$": {
                    "type": "array",
                    "description": "Fields to ignore for specific entity",
                    "items": {
                        "type": "string",
                        "minLength": 1
                    },
                    "uniqueItems": true
                }
            },
            "additionalProperties": false
        },
        "assertions": {
            "type": "array",
            "description": "List of assertions to check against the diff",
            "items": {
                "$ref": "#/$defs/assertion"
            },
            "minItems": 1
        },
        "aggregates": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/aggregate"
            }
        },
        "strict": {
            "type": "boolean",
            "default": true
        }
    },
    "required": [
        "version",
        "assertions"
    ],
    "additionalProperties": false,
    "$defs": {
        "assertion": {
            "type": "object",
            "description": "A single assertion about the diff",
            "properties": {
                "diff_type": {
                    "type": "string",
                    "enum": [
                        "added",
                        "removed",
                        "changed",
                        "unchanged"
                    ],
                    "description": "Type of change to check for"
                },
                "entity": {
                    "type": "string",
                    "minLength": 1,
                    "description": "Name of the entity/table (e.g., 'issues', 'comments')"
                },
                "where": {
                    "type": "object",
                    "description": "Filters to match entities in the diff. Engine auto-resolves relationships from schema.",
                    "additionalProperties": {
                        "oneOf": [
                            {
                                "$ref": "#/$defs/predicate"
                            },
                            {
                                "type": [
                                    "string",
                                    "number",
                                    "boolean",
                                    "null"
                                ]
                            }
                        ]
                    }
                },
                "expected_count": {
                    "oneOf": [
                        {
                            "type": "integer",
                            "minimum": 0,
                            "description": "Exact count expected"
                        },
                        {
                            "type": "object",
                            "description": "Count range",
                            "properties": {
                                "min": {
                                    "type": "integer",
                                    "minimum": 0
                                },
                                "max": {
                                    "type": "integer",
                                    "minimum": 0
                                }
                            },
                            "anyOf": [
                                {
                                    "required": [
                                        "min"
                                    ]
                                },
                                {
                                    "required": [
                                        "max"
                                    ]
                                }
                            ],
                            "additionalProperties": false
                        }
                    ],
                    "description": "Expected number of entities matching the filters"
                },
                "expected_changes": {
                    "type": "object",
                    "description": "For 'changed' type: what fields changed and how. Only checked fields listed here; unlisted fields must not change (except those in ignore).",
                    "additionalProperties": {
                        "$ref": "#/$defs/change_expectation"
                    }
                },
                "ignore": {
                    "type": "array",
                    "description": "Additional fields to ignore for this assertion only (additive with global/entity ignores)",
                    "items": {
                        "type": "string",
                        "minLength": 1
                    },
                    "uniqueItems": true
                },
                "description": {
                    "type": "string",
                    "description": "Human-readable explanation of what this assertion checks"
                }
            },
            "required": [
                "diff_type",
                "entity"
            ],
            "additionalProperties": false,
            "allOf": [
                {
                    "if": {
                        "properties": {
                            "diff_type": {
                                "enum": [
                                    "changed"
                                ]
                            }
                        }
                    },
                    "then": {
                        "properties": {
                            "expected_changes": {
                                "type": "object",
                                "minProperties": 1
                            }
                        }
                    }
                }
            ]
        },
        "predicate": {
            "type": "object",
            "description": "Condition to match against a field value",
            "minProperties": 1,
            "maxProperties": 1,
            "properties": {
                "eq": {
                    "description": "Equals"
                },
                "ne": {
                    "description": "Not equals"
                },
                "contains": {
                    "type": "string",
                    "description": "String contains substring"
                },
                "not_contains": {
                    "type": "string",
                    "description": "String does not contain substring"
                },
                "in": {
                    "type": "array",
                    "description": "Value is in list",
                    "minItems": 1
                },
                "not_in": {
                    "type": "array",
                    "description": "Value is not in list",
                    "minItems": 1
                },
                "gt": {
                    "type": "number",
                    "description": "Greater than"
                },
                "gte": {
                    "type": "number",
                    "description": "Greater than or equal"
                },
                "lt": {
                    "type": "number",
                    "description": "Less than"
                },
                "lte": {
                    "type": "number",
                    "description": "Less than or equal"
                },
                "exists": {
                    "type": "boolean",
                    "description": "Field exists (true) or is null (false)"
                },
                "starts_with": {
                    "type": "string",
                    "description": "String starts with prefix"
                },
                "ends_with": {
                    "type": "string",
                    "description": "String ends with suffix"
                },
                "regex": {
                    "type": "string",
                    "description": "Matches regular expression"
                },
                "has_any": {
                    "type": "array"
                },
                "has_all": {
                    "type": "array"
                },
                "i_contains": {
                    "type": "string"
                },
                "i_starts_with": {
                    "type": "string"
                },
                "i_ends_with": {
                    "type": "string"
                }
            },
            "additionalProperties": false
        },
        "change_expectation": {
            "type": "object",
            "properties": {
                "from": {
                    "oneOf": [
                        {
                            "$ref": "#/$defs/predicate"
                        },
                        {
                            "type": [
                                "string",
                                "number",
                                "boolean",
                                "null"
                            ]
                        }
                    ]
                },
                "to": {
                    "oneOf": [
                        {
                            "$ref": "#/$defs/predicate"
                        },
                        {
                            "type": [
                                "string",
                                "number",
                                "boolean",
                                "null"
                            ]
                        }
                    ]
                }
            },
            "additionalProperties": false
        },
        "aggregate": {
            "type": "object",
            "properties": {
                "fn": {
                    "enum": [
                        "sum",
                        "avg",
                        "min",
                        "max",
                        "count"
                    ]
                },
                "field": {
                    "type": "string"
                },
                "op": {
                    "enum": [
                        "eq",
                        "ne",
                        "gt",
                        "gte",
                        "lt",
                        "lte",
                        "between"
                    ]
                },
                "value": {
                    "oneOf": [
                        {
                            "type": "number"
                        },
                        {
                            "type": "array",
                            "items": {
                                "type": "number"
                            },
                            "minItems": 2,
                            "maxItems": 2
                        }
                    ]
                }
            },
            "required": [
                "fn",
                "field",
                "op",
                "value"
            ],
            "additionalProperties": false
        }
    }
}