"""init schema

Revision ID: 34aef68b938e
Revises: 
Create Date: 2025-10-13 02:12:33.093789

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '34aef68b938e'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('environments',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('service', sa.String(length=32), nullable=False),
    sa.Column('name', sa.String(length=255), nullable=False),
    sa.Column('version', sa.String(length=32), nullable=False),
    sa.Column('owner_scope', sa.Enum('global', 'org', 'user', name='owner_scope'), nullable=False),
    sa.Column('owner_org_id', sa.String(), nullable=True),
    sa.Column('owner_user_id', sa.String(), nullable=True),
    sa.Column('kind', sa.Enum('schema', 'artifact', 'jsonb', name='template_kind'), nullable=False),
    sa.Column('location', sa.String(length=512), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('service', 'owner_scope', 'owner_org_id', 'owner_user_id', 'name', 'version', name='uq_environments_identity'),
    schema='public'
    )
    op.create_table('organizations',
    sa.Column('id', sa.String(length=255), nullable=False),
    sa.Column('name', sa.String(length=255), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    schema='public'
    )
    op.create_table('tests',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('name', sa.String(length=255), nullable=False),
    sa.Column('prompt', sa.Text(), nullable=False),
    sa.Column('type', sa.Enum('actionEval', 'retriEval', 'compositeEval', name='test_type'), nullable=False),
    sa.Column('expected_output', postgresql.JSONB(astext_type=sa.Text()), nullable=False),
    sa.Column('template_schema', sa.String(length=255), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    schema='public'
    )
    op.create_table('users',
    sa.Column('id', sa.String(length=255), nullable=False),
    sa.Column('email', sa.String(length=255), nullable=False),
    sa.Column('username', sa.String(length=255), nullable=False),
    sa.Column('password', sa.String(length=255), nullable=False),
    sa.Column('name', sa.String(length=255), nullable=False),
    sa.Column('is_platform_admin', sa.Boolean(), nullable=False),
    sa.Column('is_organization_admin', sa.Boolean(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('email'),
    sa.UniqueConstraint('username'),
    schema='public'
    )
    op.create_table('api_keys',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('key_hash', sa.String(length=255), nullable=False),
    sa.Column('key_salt', sa.String(length=255), nullable=False),
    sa.Column('expires_at', sa.DateTime(), nullable=True),
    sa.Column('revoked_at', sa.DateTime(), nullable=True),
    sa.Column('user_id', sa.String(length=255), nullable=False),
    sa.Column('last_used_at', sa.DateTime(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['public.users.id'], ),
    sa.PrimaryKeyConstraint('id'),
    schema='public'
    )
    op.create_table('organization_memberships',
    sa.Column('user_id', sa.String(length=255), nullable=False),
    sa.Column('organization_id', sa.String(length=255), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['organization_id'], ['public.organizations.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['public.users.id'], ),
    sa.PrimaryKeyConstraint('user_id', 'organization_id'),
    schema='public'
    )
    op.create_table('run_time_environments',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('template_id', sa.UUID(), nullable=True),
    sa.Column('schema', sa.String(length=128), nullable=False),
    sa.Column('status', sa.Enum('initializing', 'ready', 'expired', 'deleted', name='test_state_status'), nullable=False),
    sa.Column('permanent', sa.Boolean(), nullable=False),
    sa.Column('expires_at', sa.DateTime(), nullable=True),
    sa.Column('max_idle_seconds', sa.Integer(), nullable=True),
    sa.Column('last_used_at', sa.DateTime(), nullable=True),
    sa.Column('created_by', sa.String(length=255), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.Column('impersonate_user_id', sa.String(length=255), nullable=True),
    sa.Column('impersonate_email', sa.String(length=255), nullable=True),
    sa.ForeignKeyConstraint(['created_by'], ['public.users.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('schema', name='uq_run_time_environments_schema'),
    schema='public'
    )
    op.create_table('test_suites',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('name', sa.String(length=255), nullable=False),
    sa.Column('description', sa.Text(), nullable=False),
    sa.Column('owner', sa.String(length=255), nullable=False),
    sa.Column('visibility', sa.Enum('public', 'private', name='test_suite_visibility'), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['owner'], ['public.users.id'], ),
    sa.PrimaryKeyConstraint('id'),
    schema='public'
    )
    op.create_table('diffs',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('environment_id', sa.UUID(), nullable=False),
    sa.Column('before_suffix', sa.String(length=255), nullable=False),
    sa.Column('after_suffix', sa.String(length=255), nullable=False),
    sa.Column('diff', postgresql.JSONB(astext_type=sa.Text()), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['environment_id'], ['public.run_time_environments.id'], ),
    sa.PrimaryKeyConstraint('id'),
    schema='public'
    )
    op.create_table('test_memberships',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('test_id', sa.UUID(), nullable=False),
    sa.Column('test_suite_id', sa.UUID(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['test_id'], ['public.tests.id'], ),
    sa.ForeignKeyConstraint(['test_suite_id'], ['public.test_suites.id'], ),
    sa.PrimaryKeyConstraint('id'),
    schema='public'
    )
    op.create_table('test_runs',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('test_id', sa.UUID(), nullable=False),
    sa.Column('test_suite_id', sa.UUID(), nullable=True),
    sa.Column('environment_id', sa.UUID(), nullable=False),
    sa.Column('status', sa.Enum('pending', 'running', 'passed', 'failed', 'error', name='test_run_status'), nullable=False),
    sa.Column('result', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.Column('before_snapshot_suffix', sa.String(length=255), nullable=True),
    sa.Column('after_snapshot_suffix', sa.String(length=255), nullable=True),
    sa.Column('created_by', sa.String(length=255), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['created_by'], ['public.users.id'], ),
    sa.ForeignKeyConstraint(['environment_id'], ['public.run_time_environments.id'], ),
    sa.ForeignKeyConstraint(['test_id'], ['public.tests.id'], ),
    sa.ForeignKeyConstraint(['test_suite_id'], ['public.test_suites.id'], ),
    sa.PrimaryKeyConstraint('id'),
    schema='public'
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('test_runs', schema='public')
    op.drop_table('test_memberships', schema='public')
    op.drop_table('diffs', schema='public')
    op.drop_table('test_suites', schema='public')
    op.drop_table('run_time_environments', schema='public')
    op.drop_table('organization_memberships', schema='public')
    op.drop_table('api_keys', schema='public')
    op.drop_table('users', schema='public')
    op.drop_table('tests', schema='public')
    op.drop_table('organizations', schema='public')
    op.drop_table('environments', schema='public')
    # ### end Alembic commands ###
